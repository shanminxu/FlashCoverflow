package cs4.effect {	import flash.display.DisplayObject;	import flash.display.DisplayObjectContainer;	import flash.geom.Matrix3D;			public class SimpleZSorter	{				public static function sortClips(container : DisplayObjectContainer, recursive : Boolean = false) : void		{			if(container != null){				var nc:int = container.numChildren;				if(nc > 1){										var index:int = 0;					var vo : SimpleZSortVO;					var displayObject:DisplayObject;					var transformedMatrix : Matrix3D;					var mainParent : DisplayObject = traverseParents(container);										var sortArray : Array = new Array();										for(var c:int = 0; c < container.numChildren; c++){						displayObject = container.getChildAt(c);						if(recursive && (displayObject is DisplayObjectContainer)){							sortClips(displayObject as DisplayObjectContainer, true);						}						transformedMatrix = displayObject.transform.getRelativeMatrix3D(mainParent);												sortArray.push(new SimpleZSortVO(displayObject, transformedMatrix.position.z));					}										sortArray.sortOn("screenZ", Array.NUMERIC | Array.DESCENDING);					for each(vo in sortArray){						container.setChildIndex(vo.object, index++);					}										sortArray = null;				}			}else{				throw new Error("No displayobject was passed as an argument");			}		}				private static function traverseParents(container : DisplayObject) : DisplayObject		{			var parent : DisplayObject = container.parent;			var lastParent : DisplayObject = parent;			while((parent = parent.parent) != null){				lastParent = parent;			}			return lastParent;		}	}}